const sg = @import("sokol").gfx;
const std = @import("std");
const m = @import("../math.zig");
//
//    #version:1# (machine generated, don't edit!)
//
//    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)
//
//    Overview:
//    =========
//    Shader program: 'display':
//        Get shader desc: shd.displayShaderDesc(sg.queryBackend());
//        Vertex Shader: vs
//        Fragment Shader: fs
//        Attributes:
//            ATTR_display_pos => 0
//            ATTR_display_color0 => 1
//    Shader program: 'init':
//        Get shader desc: shd.initShaderDesc(sg.queryBackend());
//        Compute Shader: cs_init
//    Shader program: 'update':
//        Get shader desc: shd.updateShaderDesc(sg.queryBackend());
//        Compute Shader: cs_update
//    Bindings:
//        Uniform block 'vs_params':
//            Zig struct: VsParams
//            Bind slot: UB_vs_params => 0
//        Uniform block 'cs_params':
//            Zig struct: CsParams
//            Bind slot: UB_cs_params => 0
//        Storage buffer 'vs_ssbo':
//            Zig struct: Particle
//            Bind slot: SBUF_vs_ssbo => 0
//            Readonly: true
//        Storage buffer 'cs_ssbo':
//            Zig struct: Particle
//            Bind slot: SBUF_cs_ssbo => 0
//            Readonly: false
//
pub const ATTR_display_pos = 0;
pub const ATTR_display_color0 = 1;
pub const UB_vs_params = 0;
pub const UB_cs_params = 0;
pub const SBUF_vs_ssbo = 0;
pub const SBUF_cs_ssbo = 0;
pub const VsParams = extern struct {
    mvp: m.Mat4 align(16),
};
pub const CsParams = extern struct {
    dt: f32 align(16),
    num_particles: i32 align(1),
    _pad_8: [8]u8 align(1) = undefined,
};
pub const Particle = extern struct {
    pos: [4]f32 align(16),
    vel: [4]f32 align(1),
};
//
//    #version 430
//    layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
//
//    struct particle
//    {
//        vec4 pos;
//        vec4 vel;
//    };
//
//    layout(binding = 0, std430) buffer cs_ssbo
//    {
//        particle prt[];
//    } _59;
//
//    uint xorshift32(inout uint x)
//    {
//        x ^= (x << uint(13));
//        x ^= (x >> uint(17));
//        x ^= (x << uint(5));
//        return x;
//    }
//
//    void main()
//    {
//        uint param = 305419896u ^ gl_GlobalInvocationID.x;
//        uint _44 = xorshift32(param);
//        uint param_1 = _44;
//        uint _48 = xorshift32(param_1);
//        uint param_2 = _48;
//        uint _52 = xorshift32(param_2);
//        _59.prt[gl_GlobalInvocationID.x].pos = vec4(0.0);
//        _59.prt[gl_GlobalInvocationID.x].vel = vec4((float(_44 & 32767u) * 3.0518509447574615478515625e-05) - 0.5, (float(_48 & 32767u) * 1.52592547237873077392578125e-05) + 2.0, (float(_52 & 32767u) * 3.0518509447574615478515625e-05) - 0.5, 0.0);
//    }
//
//
const cs_init_source_glsl430 = [854]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,0x69,0x7a,0x65,0x5f,0x78,
    0x20,0x3d,0x20,0x36,0x34,0x2c,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,0x69,0x7a,
    0x65,0x5f,0x79,0x20,0x3d,0x20,0x31,0x2c,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,
    0x69,0x7a,0x65,0x5f,0x7a,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,
    0x20,0x3d,0x20,0x30,0x2c,0x20,0x73,0x74,0x64,0x34,0x33,0x30,0x29,0x20,0x62,0x75,
    0x66,0x66,0x65,0x72,0x20,0x63,0x73,0x5f,0x73,0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,
    0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x35,0x39,0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,
    0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x69,0x6e,0x6f,0x75,0x74,
    0x20,0x75,0x69,0x6e,0x74,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,
    0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,
    0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,
    0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x37,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3c,0x3c,0x20,0x75,0x69,
    0x6e,0x74,0x28,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x78,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x33,0x30,0x35,0x34,0x31,0x39,0x38,0x39,
    0x36,0x75,0x20,0x5e,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,
    0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x78,0x6f,0x72,
    0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x20,0x3d,0x20,0x5f,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,
    0x20,0x5f,0x34,0x38,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,
    0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,
    0x34,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x35,0x32,
    0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x35,0x39,0x2e,
    0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x5f,0x35,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,
    0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,
    0x78,0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x34,0x34,0x20,0x26,0x20,0x33,0x32,0x37,0x36,0x37,
    0x75,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,0x39,0x34,0x34,
    0x37,0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,
    0x65,0x2d,0x30,0x35,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x5f,0x34,0x38,0x20,0x26,0x20,0x33,0x32,0x37,0x36,0x37,0x75,
    0x29,0x20,0x2a,0x20,0x31,0x2e,0x35,0x32,0x35,0x39,0x32,0x35,0x34,0x37,0x32,0x33,
    0x37,0x38,0x37,0x33,0x30,0x37,0x37,0x33,0x39,0x32,0x35,0x37,0x38,0x31,0x32,0x35,
    0x65,0x2d,0x30,0x35,0x29,0x20,0x2b,0x20,0x32,0x2e,0x30,0x2c,0x20,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x5f,0x35,0x32,0x20,0x26,0x20,0x33,0x32,0x37,0x36,0x37,0x75,
    0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,0x39,0x34,0x34,0x37,
    0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x65,
    0x2d,0x30,0x35,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 430
//    layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
//
//    struct particle
//    {
//        vec4 pos;
//        vec4 vel;
//    };
//
//    struct cs_params
//    {
//        float dt;
//        int num_particles;
//    };
//
//    uniform cs_params _21;
//
//    layout(binding = 0, std430) buffer cs_ssbo
//    {
//        particle prt[];
//    } _39;
//
//    void main()
//    {
//        if (gl_GlobalInvocationID.x >= uint(_21.num_particles))
//        {
//            return;
//        }
//        vec4 _48 = _39.prt[gl_GlobalInvocationID.x].vel;
//        _48.y = _48.y - _21.dt;
//        vec4 vel = _48;
//        vec4 _65 = _39.prt[gl_GlobalInvocationID.x].pos + (_48 * _21.dt);
//        vec4 pos = _65;
//        if (_65.y < (-2.0))
//        {
//            vec4 _92 = pos;
//            _92.y = -1.7999999523162841796875;
//            pos = _92;
//            vel *= vec4(0.800000011920928955078125, -0.800000011920928955078125, 0.800000011920928955078125, 0.0);
//        }
//        _39.prt[gl_GlobalInvocationID.x].pos = pos;
//        _39.prt[gl_GlobalInvocationID.x].vel = vel;
//    }
//
//
const cs_update_source_glsl430 = [913]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,0x69,0x7a,0x65,0x5f,0x78,
    0x20,0x3d,0x20,0x36,0x34,0x2c,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,0x69,0x7a,
    0x65,0x5f,0x79,0x20,0x3d,0x20,0x31,0x2c,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,
    0x69,0x7a,0x65,0x5f,0x7a,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x63,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6e,0x75,0x6d,0x5f,0x70,
    0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x63,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,
    0x5f,0x32,0x31,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,
    0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x2c,0x20,0x73,0x74,0x64,0x34,0x33,0x30,
    0x29,0x20,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x63,0x73,0x5f,0x73,0x73,0x62,0x6f,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,
    0x70,0x72,0x74,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x33,0x39,0x3b,0x0a,0x0a,0x76,
    0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,
    0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,0x3e,0x3d,0x20,
    0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x31,0x2e,0x6e,0x75,0x6d,0x5f,0x70,0x61,0x72,
    0x74,0x69,0x63,0x6c,0x65,0x73,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x34,
    0x38,0x20,0x3d,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,
    0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,
    0x44,0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,
    0x38,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x34,0x38,0x2e,0x79,0x20,0x2d,0x20,0x5f,0x32,
    0x31,0x2e,0x64,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,
    0x65,0x6c,0x20,0x3d,0x20,0x5f,0x34,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x36,0x35,0x20,0x3d,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,
    0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x20,0x2b,0x20,
    0x28,0x5f,0x34,0x38,0x20,0x2a,0x20,0x5f,0x32,0x31,0x2e,0x64,0x74,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x5f,
    0x36,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x36,0x35,0x2e,
    0x79,0x20,0x3c,0x20,0x28,0x2d,0x32,0x2e,0x30,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x39,0x32,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x39,0x32,0x2e,0x79,0x20,0x3d,0x20,0x2d,0x31,0x2e,0x37,0x39,0x39,
    0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,0x36,
    0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,
    0x20,0x3d,0x20,0x5f,0x39,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x6c,0x20,0x2a,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x38,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,
    0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,
    0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,
    0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,
    0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,
    0x5d,0x2e,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,
    0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,
    0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
//
//    #version 430
//
//    struct particle
//    {
//        vec4 pos;
//        vec4 vel;
//    };
//
//    layout(binding = 0, std430) readonly buffer vs_ssbo
//    {
//        particle prt[];
//    } _15;
//
//    uniform vec4 vs_params[4];
//    layout(location = 0) in vec3 pos;
//    layout(location = 0) out vec4 color;
//    layout(location = 1) in vec4 color0;
//
//    void main()
//    {
//        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(pos + _15.prt[gl_InstanceID].pos.xyz, 1.0);
//        color = color0;
//    }
//
//
const vs_source_glsl430 = [450]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,
    0x20,0x30,0x2c,0x20,0x73,0x74,0x64,0x34,0x33,0x30,0x29,0x20,0x72,0x65,0x61,0x64,
    0x6f,0x6e,0x6c,0x79,0x20,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x73,
    0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x74,0x69,0x63,
    0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x31,0x35,0x3b,
    0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,
    0x73,0x20,0x2b,0x20,0x5f,0x31,0x35,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x49,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x5d,0x2e,0x70,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
//
//    #version 430
//
//    layout(location = 0) out vec4 frag_color;
//    layout(location = 0) in vec4 color;
//
//    void main()
//    {
//        frag_color = color;
//    }
//
//
const fs_source_glsl430 = [135]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 310 es
//    layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
//
//    struct particle
//    {
//        vec4 pos;
//        vec4 vel;
//    };
//
//    layout(binding = 0, std430) buffer cs_ssbo
//    {
//        particle prt[];
//    } _59;
//
//    uint xorshift32(inout uint x)
//    {
//        x ^= (x << uint(13));
//        x ^= (x >> uint(17));
//        x ^= (x << uint(5));
//        return x;
//    }
//
//    void main()
//    {
//        uint param = 305419896u ^ gl_GlobalInvocationID.x;
//        uint _44 = xorshift32(param);
//        uint param_1 = _44;
//        uint _48 = xorshift32(param_1);
//        uint param_2 = _48;
//        uint _52 = xorshift32(param_2);
//        _59.prt[gl_GlobalInvocationID.x].pos = vec4(0.0);
//        _59.prt[gl_GlobalInvocationID.x].vel = vec4((float(_44 & 32767u) * 3.0518509447574615478515625e-05) - 0.5, (float(_48 & 32767u) * 1.52592547237873077392578125e-05) + 2.0, (float(_52 & 32767u) * 3.0518509447574615478515625e-05) - 0.5, 0.0);
//    }
//
//
const cs_init_source_glsl310es = [857]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x31,0x30,0x20,0x65,0x73,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,0x69,0x7a,
    0x65,0x5f,0x78,0x20,0x3d,0x20,0x36,0x34,0x2c,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,
    0x73,0x69,0x7a,0x65,0x5f,0x79,0x20,0x3d,0x20,0x31,0x2c,0x20,0x6c,0x6f,0x63,0x61,
    0x6c,0x5f,0x73,0x69,0x7a,0x65,0x5f,0x7a,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,
    0x6c,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x6c,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,
    0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x2c,0x20,0x73,0x74,0x64,0x34,0x33,0x30,0x29,
    0x20,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x63,0x73,0x5f,0x73,0x73,0x62,0x6f,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x70,
    0x72,0x74,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x35,0x39,0x3b,0x0a,0x0a,0x75,0x69,
    0x6e,0x74,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x69,0x6e,
    0x6f,0x75,0x74,0x20,0x75,0x69,0x6e,0x74,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,
    0x20,0x28,0x78,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x37,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3c,0x3c,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x78,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x33,0x30,0x35,0x34,0x31,
    0x39,0x38,0x39,0x36,0x75,0x20,0x5e,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,
    0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,
    0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x34,0x38,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,
    0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x5f,0x34,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x5f,0x35,0x32,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,
    0x35,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,
    0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,
    0x70,0x6f,0x73,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x5f,0x35,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,
    0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x49,0x44,0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x34,0x34,0x20,0x26,0x20,0x33,0x32,
    0x37,0x36,0x37,0x75,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,
    0x39,0x34,0x34,0x37,0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,
    0x36,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x34,0x38,0x20,0x26,0x20,0x33,0x32,0x37,
    0x36,0x37,0x75,0x29,0x20,0x2a,0x20,0x31,0x2e,0x35,0x32,0x35,0x39,0x32,0x35,0x34,
    0x37,0x32,0x33,0x37,0x38,0x37,0x33,0x30,0x37,0x37,0x33,0x39,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,0x2b,0x20,0x32,0x2e,0x30,0x2c,0x20,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x35,0x32,0x20,0x26,0x20,0x33,0x32,0x37,
    0x36,0x37,0x75,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,0x39,
    0x34,0x34,0x37,0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,0x36,
    0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 310 es
//    layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
//
//    struct particle
//    {
//        vec4 pos;
//        vec4 vel;
//    };
//
//    struct cs_params
//    {
//        float dt;
//        int num_particles;
//    };
//
//    uniform cs_params _21;
//
//    layout(binding = 0, std430) buffer cs_ssbo
//    {
//        particle prt[];
//    } _39;
//
//    void main()
//    {
//        if (gl_GlobalInvocationID.x >= uint(_21.num_particles))
//        {
//            return;
//        }
//        vec4 _48 = _39.prt[gl_GlobalInvocationID.x].vel;
//        _48.y = _48.y - _21.dt;
//        vec4 vel = _48;
//        vec4 _65 = _39.prt[gl_GlobalInvocationID.x].pos + (_48 * _21.dt);
//        vec4 pos = _65;
//        if (_65.y < (-2.0))
//        {
//            vec4 _92 = pos;
//            _92.y = -1.7999999523162841796875;
//            pos = _92;
//            vel *= vec4(0.800000011920928955078125, -0.800000011920928955078125, 0.800000011920928955078125, 0.0);
//        }
//        _39.prt[gl_GlobalInvocationID.x].pos = pos;
//        _39.prt[gl_GlobalInvocationID.x].vel = vel;
//    }
//
//
const cs_update_source_glsl310es = [916]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x31,0x30,0x20,0x65,0x73,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x6c,0x5f,0x73,0x69,0x7a,
    0x65,0x5f,0x78,0x20,0x3d,0x20,0x36,0x34,0x2c,0x20,0x6c,0x6f,0x63,0x61,0x6c,0x5f,
    0x73,0x69,0x7a,0x65,0x5f,0x79,0x20,0x3d,0x20,0x31,0x2c,0x20,0x6c,0x6f,0x63,0x61,
    0x6c,0x5f,0x73,0x69,0x7a,0x65,0x5f,0x7a,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,
    0x6c,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x6c,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x63,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x64,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6e,0x75,
    0x6d,0x5f,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x63,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x20,0x5f,0x32,0x31,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x2c,0x20,0x73,0x74,0x64,
    0x34,0x33,0x30,0x29,0x20,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x63,0x73,0x5f,0x73,
    0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x74,0x69,0x63,
    0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,0x33,0x39,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,
    0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,
    0x3e,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x31,0x2e,0x6e,0x75,0x6d,0x5f,
    0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x34,0x38,0x20,0x3d,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,
    0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x5f,0x34,0x38,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x34,0x38,0x2e,0x79,0x20,0x2d,
    0x20,0x5f,0x32,0x31,0x2e,0x64,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x76,0x65,0x6c,0x20,0x3d,0x20,0x5f,0x34,0x38,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x36,0x35,0x20,0x3d,0x20,0x5f,0x33,0x39,0x2e,
    0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,
    0x20,0x2b,0x20,0x28,0x5f,0x34,0x38,0x20,0x2a,0x20,0x5f,0x32,0x31,0x2e,0x64,0x74,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x20,
    0x3d,0x20,0x5f,0x36,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x36,0x35,0x2e,0x79,0x20,0x3c,0x20,0x28,0x2d,0x32,0x2e,0x30,0x29,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x39,0x32,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x5f,0x39,0x32,0x2e,0x79,0x20,0x3d,0x20,0x2d,0x31,0x2e,
    0x37,0x39,0x39,0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,
    0x37,0x39,0x36,0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x70,0x6f,0x73,0x20,0x3d,0x20,0x5f,0x39,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x6c,0x20,0x2a,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x30,
    0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,
    0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x38,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,
    0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,
    0x32,0x35,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,
    0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,
    0x44,0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,
    0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,
    0x44,0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,0x65,0x6c,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
//
//    #version 310 es
//
//    struct particle
//    {
//        vec4 pos;
//        vec4 vel;
//    };
//
//    layout(binding = 0, std430) readonly buffer vs_ssbo
//    {
//        particle prt[];
//    } _15;
//
//    uniform vec4 vs_params[4];
//    layout(location = 0) in vec3 pos;
//    layout(location = 0) out vec4 color;
//    layout(location = 1) in vec4 color0;
//
//    void main()
//    {
//        gl_Position = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]) * vec4(pos + _15.prt[gl_InstanceID].pos.xyz, 1.0);
//        color = color0;
//    }
//
//
const vs_source_glsl310es = [453]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x31,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,
    0x67,0x20,0x3d,0x20,0x30,0x2c,0x20,0x73,0x74,0x64,0x34,0x33,0x30,0x29,0x20,0x72,
    0x65,0x61,0x64,0x6f,0x6e,0x6c,0x79,0x20,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,
    0x73,0x5f,0x73,0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,
    0x74,0x69,0x63,0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,0x5d,0x3b,0x0a,0x7d,0x20,0x5f,
    0x31,0x35,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,
    0x34,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x61,0x74,
    0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,
    0x28,0x70,0x6f,0x73,0x20,0x2b,0x20,0x5f,0x31,0x35,0x2e,0x70,0x72,0x74,0x5b,0x67,
    0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x5d,0x2e,0x70,0x6f,
    0x73,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 310 es
//    precision mediump float;
//    precision highp int;
//
//    layout(location = 0) out highp vec4 frag_color;
//    layout(location = 0) in highp vec4 color;
//
//    void main()
//    {
//        frag_color = color;
//    }
//
//
const fs_source_glsl310es = [196]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x31,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
//
//    struct particle
//    {
//        float4 pos;
//        float4 vel;
//    };
//
//    static const uint3 gl_WorkGroupSize = uint3(64u, 1u, 1u);
//
//    RWByteAddressBuffer _59 : register(u0);
//
//    static uint3 gl_GlobalInvocationID;
//    struct SPIRV_Cross_Input
//    {
//        uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
//    };
//
//    uint xorshift32(inout uint x)
//    {
//        x ^= (x << uint(13));
//        x ^= (x >> uint(17));
//        x ^= (x << uint(5));
//        return x;
//    }
//
//    void comp_main()
//    {
//        uint param = 305419896u ^ gl_GlobalInvocationID.x;
//        uint _44 = xorshift32(param);
//        uint param_1 = _44;
//        uint _48 = xorshift32(param_1);
//        uint param_2 = _48;
//        uint _52 = xorshift32(param_2);
//        _59.Store4(gl_GlobalInvocationID.x * 32 + 0, asuint(0.0f.xxxx));
//        _59.Store4(gl_GlobalInvocationID.x * 32 + 16, asuint(float4((float(_44 & 32767u) * 3.0518509447574615478515625e-05f) - 0.5f, (float(_48 & 32767u) * 1.52592547237873077392578125e-05f) + 2.0f, (float(_52 & 32767u) * 3.0518509447574615478515625e-05f) - 0.5f, 0.0f)));
//    }
//
//    [numthreads(64, 1, 1)]
//    void main(SPIRV_Cross_Input stage_input)
//    {
//        gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
//        comp_main();
//    }
//
const cs_init_source_hlsl5 = [1120]u8 {
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x76,0x65,0x6c,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x75,0x69,0x6e,0x74,0x33,0x20,0x67,0x6c,0x5f,0x57,0x6f,0x72,0x6b,
    0x47,0x72,0x6f,0x75,0x70,0x53,0x69,0x7a,0x65,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,
    0x33,0x28,0x36,0x34,0x75,0x2c,0x20,0x31,0x75,0x2c,0x20,0x31,0x75,0x29,0x3b,0x0a,
    0x0a,0x52,0x57,0x42,0x79,0x74,0x65,0x41,0x64,0x64,0x72,0x65,0x73,0x73,0x42,0x75,
    0x66,0x66,0x65,0x72,0x20,0x5f,0x35,0x39,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,
    0x74,0x65,0x72,0x28,0x75,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x75,0x69,0x6e,0x74,0x33,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,
    0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x3b,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x33,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,0x3a,0x20,0x53,0x56,0x5f,0x44,0x69,
    0x73,0x70,0x61,0x74,0x63,0x68,0x54,0x68,0x72,0x65,0x61,0x64,0x49,0x44,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,
    0x74,0x33,0x32,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,0x75,0x69,0x6e,0x74,0x20,0x78,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,
    0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,
    0x74,0x28,0x31,0x37,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,
    0x20,0x28,0x78,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x35,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x78,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x63,0x6f,0x6d,0x70,0x5f,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3d,0x20,0x33,0x30,0x35,0x34,0x31,0x39,0x38,0x39,0x36,0x75,
    0x20,0x5e,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,
    0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x5f,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,
    0x34,0x38,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x34,0x38,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x35,0x32,0x20,0x3d,
    0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x35,0x39,0x2e,0x53,0x74,
    0x6f,0x72,0x65,0x34,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,
    0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,0x2a,0x20,0x33,
    0x32,0x20,0x2b,0x20,0x30,0x2c,0x20,0x61,0x73,0x75,0x69,0x6e,0x74,0x28,0x30,0x2e,
    0x30,0x66,0x2e,0x78,0x78,0x78,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,
    0x35,0x39,0x2e,0x53,0x74,0x6f,0x72,0x65,0x34,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,
    0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,
    0x78,0x20,0x2a,0x20,0x33,0x32,0x20,0x2b,0x20,0x31,0x36,0x2c,0x20,0x61,0x73,0x75,
    0x69,0x6e,0x74,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x5f,0x34,0x34,0x20,0x26,0x20,0x33,0x32,0x37,0x36,0x37,0x75,0x29,0x20,
    0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,0x39,0x34,0x34,0x37,0x35,0x37,
    0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x65,0x2d,0x30,
    0x35,0x66,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x66,0x2c,0x20,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x5f,0x34,0x38,0x20,0x26,0x20,0x33,0x32,0x37,0x36,0x37,0x75,0x29,
    0x20,0x2a,0x20,0x31,0x2e,0x35,0x32,0x35,0x39,0x32,0x35,0x34,0x37,0x32,0x33,0x37,
    0x38,0x37,0x33,0x30,0x37,0x37,0x33,0x39,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x65,
    0x2d,0x30,0x35,0x66,0x29,0x20,0x2b,0x20,0x32,0x2e,0x30,0x66,0x2c,0x20,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x35,0x32,0x20,0x26,0x20,0x33,0x32,0x37,0x36,0x37,
    0x75,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,0x39,0x34,0x34,
    0x37,0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,0x36,0x32,0x35,
    0x65,0x2d,0x30,0x35,0x66,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x66,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x5b,0x6e,0x75,0x6d,0x74,
    0x68,0x72,0x65,0x61,0x64,0x73,0x28,0x36,0x34,0x2c,0x20,0x31,0x2c,0x20,0x31,0x29,
    0x5d,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,
    0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6d,0x70,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x7d,0x0a,0x00,

};
//
//    struct particle
//    {
//        float4 pos;
//        float4 vel;
//    };
//
//    static const uint3 gl_WorkGroupSize = uint3(64u, 1u, 1u);
//
//    cbuffer cs_params : register(b0)
//    {
//        float _21_dt : packoffset(c0);
//        int _21_num_particles : packoffset(c0.y);
//    };
//
//    RWByteAddressBuffer _39 : register(u0);
//
//    static uint3 gl_GlobalInvocationID;
//    struct SPIRV_Cross_Input
//    {
//        uint3 gl_GlobalInvocationID : SV_DispatchThreadID;
//    };
//
//    void comp_main()
//    {
//        if (gl_GlobalInvocationID.x >= uint(_21_num_particles))
//        {
//            return;
//        }
//        float4 _48 = asfloat(_39.Load4(gl_GlobalInvocationID.x * 32 + 16));
//        _48.y = _48.y - _21_dt;
//        float4 vel = _48;
//        float4 _65 = asfloat(_39.Load4(gl_GlobalInvocationID.x * 32 + 0)) + (_48 * _21_dt);
//        float4 pos = _65;
//        if (_65.y < (-2.0f))
//        {
//            float4 _92 = pos;
//            _92.y = -1.7999999523162841796875f;
//            pos = _92;
//            vel *= float4(0.800000011920928955078125f, -0.800000011920928955078125f, 0.800000011920928955078125f, 0.0f);
//        }
//        _39.Store4(gl_GlobalInvocationID.x * 32 + 0, asuint(pos));
//        _39.Store4(gl_GlobalInvocationID.x * 32 + 16, asuint(vel));
//    }
//
//    [numthreads(64, 1, 1)]
//    void main(SPIRV_Cross_Input stage_input)
//    {
//        gl_GlobalInvocationID = stage_input.gl_GlobalInvocationID;
//        comp_main();
//    }
//
const cs_update_source_hlsl5 = [1257]u8 {
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x76,0x65,0x6c,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x75,0x69,0x6e,0x74,0x33,0x20,0x67,0x6c,0x5f,0x57,0x6f,0x72,0x6b,
    0x47,0x72,0x6f,0x75,0x70,0x53,0x69,0x7a,0x65,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,
    0x33,0x28,0x36,0x34,0x75,0x2c,0x20,0x31,0x75,0x2c,0x20,0x31,0x75,0x29,0x3b,0x0a,
    0x0a,0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x63,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x31,0x5f,0x64,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x32,0x31,0x5f,0x6e,0x75,0x6d,0x5f,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,
    0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,
    0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x52,0x57,0x42,0x79,0x74,0x65,0x41,
    0x64,0x64,0x72,0x65,0x73,0x73,0x42,0x75,0x66,0x66,0x65,0x72,0x20,0x5f,0x33,0x39,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x75,0x30,0x29,0x3b,
    0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x75,0x69,0x6e,0x74,0x33,0x20,0x67,
    0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x49,0x44,0x3b,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x33,0x20,0x67,0x6c,0x5f,0x47,0x6c,
    0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,
    0x20,0x3a,0x20,0x53,0x56,0x5f,0x44,0x69,0x73,0x70,0x61,0x74,0x63,0x68,0x54,0x68,
    0x72,0x65,0x61,0x64,0x49,0x44,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x63,0x6f,0x6d,0x70,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,
    0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,0x3e,
    0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x31,0x5f,0x6e,0x75,0x6d,0x5f,0x70,
    0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x5f,0x34,0x38,0x20,0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x5f,0x33,0x39,0x2e,0x4c,0x6f,0x61,0x64,0x34,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,
    0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,
    0x78,0x20,0x2a,0x20,0x33,0x32,0x20,0x2b,0x20,0x31,0x36,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x5f,0x34,0x38,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x34,0x38,0x2e,0x79,
    0x20,0x2d,0x20,0x5f,0x32,0x31,0x5f,0x64,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x76,0x65,0x6c,0x20,0x3d,0x20,0x5f,0x34,0x38,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x36,0x35,0x20,
    0x3d,0x20,0x61,0x73,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x33,0x39,0x2e,0x4c,0x6f,
    0x61,0x64,0x34,0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,0x2a,0x20,0x33,0x32,
    0x20,0x2b,0x20,0x30,0x29,0x29,0x20,0x2b,0x20,0x28,0x5f,0x34,0x38,0x20,0x2a,0x20,
    0x5f,0x32,0x31,0x5f,0x64,0x74,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x5f,0x36,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x36,0x35,0x2e,0x79,0x20,0x3c,0x20,0x28,
    0x2d,0x32,0x2e,0x30,0x66,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x39,0x32,
    0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x39,0x32,0x2e,0x79,0x20,0x3d,0x20,0x2d,0x31,0x2e,0x37,0x39,0x39,0x39,0x39,
    0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,0x36,0x38,0x37,
    0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x20,
    0x3d,0x20,0x5f,0x39,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,
    0x65,0x6c,0x20,0x2a,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,0x38,
    0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,
    0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,0x2d,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x66,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,
    0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,
    0x32,0x35,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,0x39,0x2e,0x53,0x74,0x6f,0x72,0x65,0x34,
    0x28,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,0x2a,0x20,0x33,0x32,0x20,0x2b,0x20,
    0x30,0x2c,0x20,0x61,0x73,0x75,0x69,0x6e,0x74,0x28,0x70,0x6f,0x73,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x5f,0x33,0x39,0x2e,0x53,0x74,0x6f,0x72,0x65,0x34,0x28,
    0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x20,0x2a,0x20,0x33,0x32,0x20,0x2b,0x20,0x31,
    0x36,0x2c,0x20,0x61,0x73,0x75,0x69,0x6e,0x74,0x28,0x76,0x65,0x6c,0x29,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x5b,0x6e,0x75,0x6d,0x74,0x68,0x72,0x65,0x61,0x64,0x73,0x28,
    0x36,0x34,0x2c,0x20,0x31,0x2c,0x20,0x31,0x29,0x5d,0x0a,0x76,0x6f,0x69,0x64,0x20,
    0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,
    0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x67,0x6c,
    0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x49,0x44,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6d,0x70,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
//
//    struct particle
//    {
//        float4 pos;
//        float4 vel;
//    };
//
//    ByteAddressBuffer _15 : register(t16);
//    cbuffer vs_params : register(b0)
//    {
//        row_major float4x4 _46_mvp : packoffset(c0);
//    };
//
//
//    static float4 gl_Position;
//    static int gl_InstanceIndex;
//    static float3 pos;
//    static float4 color;
//    static float4 color0;
//
//    struct SPIRV_Cross_Input
//    {
//        float3 pos : TEXCOORD0;
//        float4 color0 : TEXCOORD1;
//        uint gl_InstanceIndex : SV_InstanceID;
//    };
//
//    struct SPIRV_Cross_Output
//    {
//        float4 color : TEXCOORD0;
//        float4 gl_Position : SV_Position;
//    };
//
//    void vert_main()
//    {
//        gl_Position = mul(float4(pos + asfloat(_15.Load4(gl_InstanceIndex * 32 + 0)).xyz, 1.0f), _46_mvp);
//        color = color0;
//    }
//
//    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
//    {
//        gl_InstanceIndex = int(stage_input.gl_InstanceIndex);
//        pos = stage_input.pos;
//        color0 = stage_input.color0;
//        vert_main();
//        SPIRV_Cross_Output stage_output;
//        stage_output.gl_Position = gl_Position;
//        stage_output.color = color;
//        return stage_output;
//    }
//
const vs_source_hlsl5 = [1012]u8 {
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x76,0x65,0x6c,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x42,0x79,0x74,0x65,0x41,0x64,0x64,0x72,0x65,0x73,
    0x73,0x42,0x75,0x66,0x66,0x65,0x72,0x20,0x5f,0x31,0x35,0x20,0x3a,0x20,0x72,0x65,
    0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x31,0x36,0x29,0x3b,0x0a,0x63,0x62,0x75,
    0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,
    0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x34,0x36,0x5f,0x6d,0x76,0x70,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x49,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
    0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x30,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x49,
    0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x53,
    0x56,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x44,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x6f,0x73,0x20,0x2b,0x20,0x61,0x73,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x5f,0x31,0x35,0x2e,0x4c,0x6f,0x61,0x64,0x34,0x28,0x67,0x6c,
    0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x2a,
    0x20,0x33,0x32,0x20,0x2b,0x20,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,
    0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x34,0x36,0x5f,0x6d,0x76,0x70,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,
    0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,
    0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x00,
};
//
//    static float4 frag_color;
//    static float4 color;
//
//    struct SPIRV_Cross_Input
//    {
//        float4 color : TEXCOORD0;
//    };
//
//    struct SPIRV_Cross_Output
//    {
//        float4 frag_color : SV_Target0;
//    };
//
//    void frag_main()
//    {
//        frag_color = color;
//    }
//
//    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
//    {
//        color = stage_input.color;
//        frag_main();
//        SPIRV_Cross_Output stage_output;
//        stage_output.frag_color = frag_color;
//        return stage_output;
//    }
//
const fs_source_hlsl5 = [435]u8 {
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,
    0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x7d,0x0a,0x00,
};
//
//    #pragma clang diagnostic ignored "-Wmissing-prototypes"
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    struct particle
//    {
//        float4 pos;
//        float4 vel;
//    };
//
//    struct cs_ssbo
//    {
//        particle prt[1];
//    };
//
//    constant uint3 gl_WorkGroupSize [[maybe_unused]] = uint3(64u, 1u, 1u);
//
//    static inline __attribute__((always_inline))
//    uint xorshift32(thread uint& x)
//    {
//        x ^= (x << uint(13));
//        x ^= (x >> uint(17));
//        x ^= (x << uint(5));
//        return x;
//    }
//
//    kernel void main0(device cs_ssbo& _59 [[buffer(8)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
//    {
//        uint param = 305419896u ^ gl_GlobalInvocationID.x;
//        uint _44 = xorshift32(param);
//        uint param_1 = _44;
//        uint _48 = xorshift32(param_1);
//        uint param_2 = _48;
//        uint _52 = xorshift32(param_2);
//        _59.prt[gl_GlobalInvocationID.x].pos = float4(0.0);
//        _59.prt[gl_GlobalInvocationID.x].vel = float4((float(_44 & 32767u) * 3.0518509447574615478515625e-05) - 0.5, (float(_48 & 32767u) * 1.52592547237873077392578125e-05) + 2.0, (float(_52 & 32767u) * 3.0518509447574615478515625e-05) - 0.5, 0.0);
//    }
//
//
const cs_init_source_metal_macos = [1097]u8 {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x76,0x65,
    0x6c,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x63,0x73,
    0x5f,0x73,0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x72,0x74,
    0x69,0x63,0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,0x31,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x75,0x69,0x6e,0x74,0x33,0x20,
    0x67,0x6c,0x5f,0x57,0x6f,0x72,0x6b,0x47,0x72,0x6f,0x75,0x70,0x53,0x69,0x7a,0x65,
    0x20,0x5b,0x5b,0x6d,0x61,0x79,0x62,0x65,0x5f,0x75,0x6e,0x75,0x73,0x65,0x64,0x5d,
    0x5d,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x33,0x28,0x36,0x34,0x75,0x2c,0x20,0x31,
    0x75,0x2c,0x20,0x31,0x75,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,
    0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,
    0x69,0x6e,0x65,0x29,0x29,0x0a,0x75,0x69,0x6e,0x74,0x20,0x78,0x6f,0x72,0x73,0x68,
    0x69,0x66,0x74,0x33,0x32,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x75,0x69,0x6e,
    0x74,0x26,0x20,0x78,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,
    0x20,0x28,0x78,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x33,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3e,0x3e,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x37,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x78,0x20,0x5e,0x3d,0x20,0x28,0x78,0x20,0x3c,0x3c,0x20,0x75,0x69,0x6e,0x74,0x28,
    0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x78,0x3b,0x0a,0x7d,0x0a,0x0a,0x6b,0x65,0x72,0x6e,0x65,0x6c,0x20,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x64,0x65,0x76,0x69,0x63,0x65,0x20,0x63,
    0x73,0x5f,0x73,0x73,0x62,0x6f,0x26,0x20,0x5f,0x35,0x39,0x20,0x5b,0x5b,0x62,0x75,
    0x66,0x66,0x65,0x72,0x28,0x38,0x29,0x5d,0x5d,0x2c,0x20,0x75,0x69,0x6e,0x74,0x33,
    0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,0x5b,0x5b,0x74,0x68,0x72,0x65,0x61,0x64,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5f,0x69,0x6e,0x5f,0x67,0x72,0x69,0x64,
    0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x33,0x30,0x35,0x34,0x31,0x39,0x38,0x39,0x36,
    0x75,0x20,0x5e,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,
    0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,
    0x3d,0x20,0x5f,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x5f,0x34,0x38,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x34,
    0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x35,0x32,0x20,
    0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x35,0x39,0x2e,0x70,
    0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x5f,0x35,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,
    0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,
    0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x34,0x34,0x20,0x26,0x20,0x33,0x32,
    0x37,0x36,0x37,0x75,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,
    0x39,0x34,0x34,0x37,0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,
    0x36,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x34,0x38,0x20,0x26,0x20,0x33,0x32,0x37,
    0x36,0x37,0x75,0x29,0x20,0x2a,0x20,0x31,0x2e,0x35,0x32,0x35,0x39,0x32,0x35,0x34,
    0x37,0x32,0x33,0x37,0x38,0x37,0x33,0x30,0x37,0x37,0x33,0x39,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,0x2b,0x20,0x32,0x2e,0x30,0x2c,0x20,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x35,0x32,0x20,0x26,0x20,0x33,0x32,0x37,
    0x36,0x37,0x75,0x29,0x20,0x2a,0x20,0x33,0x2e,0x30,0x35,0x31,0x38,0x35,0x30,0x39,
    0x34,0x34,0x37,0x35,0x37,0x34,0x36,0x31,0x35,0x34,0x37,0x38,0x35,0x31,0x35,0x36,
    0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    struct cs_params
//    {
//        float dt;
//        int num_particles;
//    };
//
//    struct particle
//    {
//        float4 pos;
//        float4 vel;
//    };
//
//    struct cs_ssbo
//    {
//        particle prt[1];
//    };
//
//    constant uint3 gl_WorkGroupSize [[maybe_unused]] = uint3(64u, 1u, 1u);
//
//    kernel void main0(constant cs_params& _21 [[buffer(0)]], device cs_ssbo& _39 [[buffer(8)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
//    {
//        if (gl_GlobalInvocationID.x >= uint(_21.num_particles))
//        {
//            return;
//        }
//        float4 _48 = _39.prt[gl_GlobalInvocationID.x].vel;
//        _48.y = _48.y - _21.dt;
//        float4 vel = _48;
//        float4 _65 = _39.prt[gl_GlobalInvocationID.x].pos + (_48 * _21.dt);
//        float4 pos = _65;
//        if (_65.y < (-2.0))
//        {
//            float4 _92 = pos;
//            _92.y = -1.7999999523162841796875;
//            pos = _92;
//            vel *= float4(0.800000011920928955078125, -0.800000011920928955078125, 0.800000011920928955078125, 0.0);
//        }
//        _39.prt[gl_GlobalInvocationID.x].pos = pos;
//        _39.prt[gl_GlobalInvocationID.x].vel = vel;
//    }
//
//
const cs_update_source_metal_macos = [1075]u8 {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x63,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x64,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x6e,0x75,0x6d,0x5f,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,0x61,0x72,0x74,0x69,
    0x63,0x6c,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x63,0x73,0x5f,0x73,0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,0x31,0x5d,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x75,0x69,0x6e,
    0x74,0x33,0x20,0x67,0x6c,0x5f,0x57,0x6f,0x72,0x6b,0x47,0x72,0x6f,0x75,0x70,0x53,
    0x69,0x7a,0x65,0x20,0x5b,0x5b,0x6d,0x61,0x79,0x62,0x65,0x5f,0x75,0x6e,0x75,0x73,
    0x65,0x64,0x5d,0x5d,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x33,0x28,0x36,0x34,0x75,
    0x2c,0x20,0x31,0x75,0x2c,0x20,0x31,0x75,0x29,0x3b,0x0a,0x0a,0x6b,0x65,0x72,0x6e,
    0x65,0x6c,0x20,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x63,0x6f,
    0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x63,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x26,0x20,0x5f,0x32,0x31,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,
    0x29,0x5d,0x5d,0x2c,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x20,0x63,0x73,0x5f,0x73,
    0x73,0x62,0x6f,0x26,0x20,0x5f,0x33,0x39,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,
    0x72,0x28,0x38,0x29,0x5d,0x5d,0x2c,0x20,0x75,0x69,0x6e,0x74,0x33,0x20,0x67,0x6c,
    0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x49,0x44,0x20,0x5b,0x5b,0x74,0x68,0x72,0x65,0x61,0x64,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x5f,0x69,0x6e,0x5f,0x67,0x72,0x69,0x64,0x5d,0x5d,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x67,0x6c,0x5f,0x47,0x6c,
    0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,
    0x2e,0x78,0x20,0x3e,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x31,0x2e,0x6e,
    0x75,0x6d,0x5f,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x29,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x34,0x38,0x20,0x3d,0x20,0x5f,0x33,0x39,0x2e,
    0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x38,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x34,
    0x38,0x2e,0x79,0x20,0x2d,0x20,0x5f,0x32,0x31,0x2e,0x64,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x76,0x65,0x6c,0x20,0x3d,0x20,0x5f,
    0x34,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x36,0x35,0x20,0x3d,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,
    0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x49,0x44,0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x20,0x2b,0x20,0x28,0x5f,0x34,0x38,
    0x20,0x2a,0x20,0x5f,0x32,0x31,0x2e,0x64,0x74,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x5f,0x36,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x36,0x35,0x2e,0x79,0x20,
    0x3c,0x20,0x28,0x2d,0x32,0x2e,0x30,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x39,0x32,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x39,0x32,0x2e,0x79,0x20,0x3d,0x20,0x2d,0x31,0x2e,0x37,0x39,0x39,
    0x39,0x39,0x39,0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,0x36,
    0x38,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,
    0x20,0x3d,0x20,0x5f,0x39,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x6c,0x20,0x2a,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x30,0x2e,
    0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,
    0x35,0x35,0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x2d,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,
    0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x37,0x38,0x31,0x32,
    0x35,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,
    0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,
    0x2e,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x47,0x6c,
    0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,
    0x2e,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    struct particle
//    {
//        float4 pos;
//        float4 vel;
//    };
//
//    struct vs_ssbo
//    {
//        particle prt[1];
//    };
//
//    struct vs_params
//    {
//        float4x4 mvp;
//    };
//
//    struct main0_out
//    {
//        float4 color [[user(locn0)]];
//        float4 gl_Position [[position]];
//    };
//
//    struct main0_in
//    {
//        float3 pos [[attribute(0)]];
//        float4 color0 [[attribute(1)]];
//    };
//
//    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _46 [[buffer(0)]], const device vs_ssbo& _15 [[buffer(8)]], uint gl_InstanceIndex [[instance_id]])
//    {
//        main0_out out = {};
//        out.gl_Position = _46.mvp * float4(in.pos + _15.prt[int(gl_InstanceIndex)].pos.xyz, 1.0);
//        out.color = in.color0;
//        return out;
//    }
//
//
const vs_source_metal_macos = [729]u8 {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,
    0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x73,0x73,0x62,0x6f,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x70,0x72,0x74,0x5b,
    0x31,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x76,0x70,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x6f,0x73,0x20,
    0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x30,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x61,0x6e,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,
    0x34,0x36,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,
    0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x20,0x76,
    0x73,0x5f,0x73,0x73,0x62,0x6f,0x26,0x20,0x5f,0x31,0x35,0x20,0x5b,0x5b,0x62,0x75,
    0x66,0x66,0x65,0x72,0x28,0x38,0x29,0x5d,0x5d,0x2c,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,
    0x20,0x5b,0x5b,0x69,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x5f,0x69,0x64,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x5f,0x34,0x36,0x2e,0x6d,0x76,0x70,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x20,0x2b,0x20,0x5f,0x31,0x35,0x2e,
    0x70,0x72,0x74,0x5b,0x69,0x6e,0x74,0x28,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,
    0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x29,0x5d,0x2e,0x70,0x6f,0x73,0x2e,0x78,
    0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,
    0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x69,0x6e,0x2e,0x63,0x6f,0x6c,
    0x6f,0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    struct main0_out
//    {
//        float4 frag_color [[color(0)]];
//    };
//
//    struct main0_in
//    {
//        float4 color [[user(locn0)]];
//    };
//
//    fragment main0_out main0(main0_in in [[stage_in]])
//    {
//        main0_out out = {};
//        out.frag_color = in.color;
//        return out;
//    }
//
//
const fs_source_metal_macos = [315]u8 {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,
    0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,
    0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,
    0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x69,0x6e,0x2e,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    struct particle {
//      /_ @offset(0) _/
//      pos : vec4f,
//      /_ @offset(16) _/
//      vel : vec4f,
//    }
//
//    alias RTArr = array<particle>;
//
//    struct cs_ssbo {
//      /_ @offset(0) _/
//      prt : RTArr,
//    }
//
//    var<private> gl_GlobalInvocationID : vec3u;
//
//    @binding(32) @group(1) var<storage, read_write> x_59 : cs_ssbo;
//
//    fn xorshift32_u1_(x : ptr<function, u32>) -> u32 {
//      *(x) = (*(x) ^ (*(x) << bitcast<u32>(13i)));
//      *(x) = (*(x) ^ (*(x) >> bitcast<u32>(17i)));
//      *(x) = (*(x) ^ (*(x) << bitcast<u32>(5i)));
//      let x_28 = *(x);
//      return x_28;
//    }
//
//    fn main_1() {
//      var idx : u32;
//      var x_1 : u32;
//      var param : u32;
//      var y : u32;
//      var param_1 : u32;
//      var z : u32;
//      var param_2 : u32;
//      idx = gl_GlobalInvocationID.x;
//      param = (305419896u ^ idx);
//      let x_44 = xorshift32_u1_(&(param));
//      x_1 = x_44;
//      param_1 = x_1;
//      let x_48 = xorshift32_u1_(&(param_1));
//      y = x_48;
//      param_2 = y;
//      let x_52 = xorshift32_u1_(&(param_2));
//      z = x_52;
//      let x_61 = idx;
//      x_59.prt[x_61].pos = vec4f();
//      let x_66 = idx;
//      x_59.prt[x_66].vel = vec4f(((f32((x_1 & 32767u)) / 32767.0f) - 0.5f), (((f32((y & 32767u)) / 32767.0f) * 0.5f) + 2.0f), ((f32((z & 32767u)) / 32767.0f) - 0.5f), 0.0f);
//      return;
//    }
//
//    @compute @workgroup_size(64i, 1i, 1i)
//    fn main(@builtin(global_invocation_id) gl_GlobalInvocationID_param : vec3u) {
//      gl_GlobalInvocationID = gl_GlobalInvocationID_param;
//      main_1();
//    }
//
const cs_init_source_wgsl = [1385]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,
    0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,
    0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x36,0x29,0x20,0x2a,0x2f,
    0x0a,0x20,0x20,0x76,0x65,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,
    0x7d,0x0a,0x0a,0x61,0x6c,0x69,0x61,0x73,0x20,0x52,0x54,0x41,0x72,0x72,0x20,0x3d,
    0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x3e,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x63,0x73,0x5f,0x73,0x73,0x62,
    0x6f,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x70,0x72,0x74,0x20,0x3a,0x20,0x52,
    0x54,0x41,0x72,0x72,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,
    0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x75,0x3b,0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x33,
    0x32,0x29,0x20,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x76,0x61,0x72,
    0x3c,0x73,0x74,0x6f,0x72,0x61,0x67,0x65,0x2c,0x20,0x72,0x65,0x61,0x64,0x5f,0x77,
    0x72,0x69,0x74,0x65,0x3e,0x20,0x78,0x5f,0x35,0x39,0x20,0x3a,0x20,0x63,0x73,0x5f,
    0x73,0x73,0x62,0x6f,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,
    0x66,0x74,0x33,0x32,0x5f,0x75,0x31,0x5f,0x28,0x78,0x20,0x3a,0x20,0x70,0x74,0x72,
    0x3c,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x75,0x33,0x32,0x3e,0x29,
    0x20,0x2d,0x3e,0x20,0x75,0x33,0x32,0x20,0x7b,0x0a,0x20,0x20,0x2a,0x28,0x78,0x29,
    0x20,0x3d,0x20,0x28,0x2a,0x28,0x78,0x29,0x20,0x5e,0x20,0x28,0x2a,0x28,0x78,0x29,
    0x20,0x3c,0x3c,0x20,0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,0x75,0x33,0x32,0x3e,
    0x28,0x31,0x33,0x69,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x2a,0x28,0x78,0x29,0x20,
    0x3d,0x20,0x28,0x2a,0x28,0x78,0x29,0x20,0x5e,0x20,0x28,0x2a,0x28,0x78,0x29,0x20,
    0x3e,0x3e,0x20,0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,0x75,0x33,0x32,0x3e,0x28,
    0x31,0x37,0x69,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x2a,0x28,0x78,0x29,0x20,0x3d,
    0x20,0x28,0x2a,0x28,0x78,0x29,0x20,0x5e,0x20,0x28,0x2a,0x28,0x78,0x29,0x20,0x3c,
    0x3c,0x20,0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,0x75,0x33,0x32,0x3e,0x28,0x35,
    0x69,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x38,
    0x20,0x3d,0x20,0x2a,0x28,0x78,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x78,0x5f,0x32,0x38,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x69,
    0x64,0x78,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x78,0x5f,0x31,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x79,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,
    0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3a,0x20,0x75,0x33,0x32,
    0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x7a,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,
    0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3a,
    0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,0x69,0x64,0x78,0x20,0x3d,0x20,0x67,0x6c,
    0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x49,0x44,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,
    0x20,0x28,0x33,0x30,0x35,0x34,0x31,0x39,0x38,0x39,0x36,0x75,0x20,0x5e,0x20,0x69,
    0x64,0x78,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x34,0x20,
    0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,0x33,0x32,0x5f,0x75,0x31,0x5f,
    0x28,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x29,0x3b,0x0a,0x20,0x20,0x78,0x5f,
    0x31,0x20,0x3d,0x20,0x78,0x5f,0x34,0x34,0x3b,0x0a,0x20,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x78,0x5f,0x31,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,
    0x20,0x78,0x5f,0x34,0x38,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,0x68,0x69,0x66,0x74,
    0x33,0x32,0x5f,0x75,0x31,0x5f,0x28,0x26,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x79,0x20,0x3d,0x20,0x78,0x5f,0x34,0x38,0x3b,0x0a,
    0x20,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x79,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x35,0x32,0x20,0x3d,0x20,0x78,0x6f,0x72,0x73,
    0x68,0x69,0x66,0x74,0x33,0x32,0x5f,0x75,0x31,0x5f,0x28,0x26,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x29,0x29,0x3b,0x0a,0x20,0x20,0x7a,0x20,0x3d,0x20,0x78,0x5f,
    0x35,0x32,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x31,0x20,0x3d,
    0x20,0x69,0x64,0x78,0x3b,0x0a,0x20,0x20,0x78,0x5f,0x35,0x39,0x2e,0x70,0x72,0x74,
    0x5b,0x78,0x5f,0x36,0x31,0x5d,0x2e,0x70,0x6f,0x73,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x66,0x28,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x36,
    0x20,0x3d,0x20,0x69,0x64,0x78,0x3b,0x0a,0x20,0x20,0x78,0x5f,0x35,0x39,0x2e,0x70,
    0x72,0x74,0x5b,0x78,0x5f,0x36,0x36,0x5d,0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x66,0x28,0x28,0x28,0x66,0x33,0x32,0x28,0x28,0x78,0x5f,0x31,0x20,
    0x26,0x20,0x33,0x32,0x37,0x36,0x37,0x75,0x29,0x29,0x20,0x2f,0x20,0x33,0x32,0x37,
    0x36,0x37,0x2e,0x30,0x66,0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x66,0x29,0x2c,0x20,
    0x28,0x28,0x28,0x66,0x33,0x32,0x28,0x28,0x79,0x20,0x26,0x20,0x33,0x32,0x37,0x36,
    0x37,0x75,0x29,0x29,0x20,0x2f,0x20,0x33,0x32,0x37,0x36,0x37,0x2e,0x30,0x66,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x35,0x66,0x29,0x20,0x2b,0x20,0x32,0x2e,0x30,0x66,0x29,
    0x2c,0x20,0x28,0x28,0x66,0x33,0x32,0x28,0x28,0x7a,0x20,0x26,0x20,0x33,0x32,0x37,
    0x36,0x37,0x75,0x29,0x29,0x20,0x2f,0x20,0x33,0x32,0x37,0x36,0x37,0x2e,0x30,0x66,
    0x29,0x20,0x2d,0x20,0x30,0x2e,0x35,0x66,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,
    0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x40,
    0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x20,0x40,0x77,0x6f,0x72,0x6b,0x67,0x72,0x6f,
    0x75,0x70,0x5f,0x73,0x69,0x7a,0x65,0x28,0x36,0x34,0x69,0x2c,0x20,0x31,0x69,0x2c,
    0x20,0x31,0x69,0x29,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,0x62,0x75,
    0x69,0x6c,0x74,0x69,0x6e,0x28,0x67,0x6c,0x6f,0x62,0x61,0x6c,0x5f,0x69,0x6e,0x76,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x5f,0x69,0x64,0x29,0x20,0x67,0x6c,0x5f,0x47,
    0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,
    0x44,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x75,0x29,
    0x20,0x7b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,
    0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,0x3d,0x20,0x67,0x6c,0x5f,
    0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x49,0x44,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x31,0x28,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    struct cs_params {
//      /_ @offset(0) _/
//      dt : f32,
//      /_ @offset(4) _/
//      num_particles : i32,
//    }
//
//    struct particle {
//      /_ @offset(0) _/
//      pos : vec4f,
//      /_ @offset(16) _/
//      vel : vec4f,
//    }
//
//    alias RTArr = array<particle>;
//
//    struct cs_ssbo {
//      /_ @offset(0) _/
//      prt : RTArr,
//    }
//
//    var<private> gl_GlobalInvocationID : vec3u;
//
//    @binding(0) @group(0) var<uniform> x_21 : cs_params;
//
//    @binding(32) @group(1) var<storage, read_write> x_39 : cs_ssbo;
//
//    fn main_1() {
//      var idx : u32;
//      var pos : vec4f;
//      var vel : vec4f;
//      idx = gl_GlobalInvocationID.x;
//      if ((idx >= bitcast<u32>(x_21.num_particles))) {
//        return;
//      }
//      pos = x_39.prt[idx].pos;
//      vel = x_39.prt[idx].vel;
//      vel.y = (vel.y - (1.0f * x_21.dt));
//      pos = (pos + (vel * x_21.dt));
//      if ((pos.y < -2.0f)) {
//        pos.y = -1.79999995231628417969f;
//        vel = (vel * vec4f(0.80000001192092895508f, -0.80000001192092895508f, 0.80000001192092895508f, 0.0f));
//      }
//      let x_80 = idx;
//      x_39.prt[x_80].pos = pos;
//      let x_83 = idx;
//      x_39.prt[x_83].vel = vel;
//      return;
//    }
//
//    @compute @workgroup_size(64i, 1i, 1i)
//    fn main(@builtin(global_invocation_id) gl_GlobalInvocationID_param : vec3u) {
//      gl_GlobalInvocationID = gl_GlobalInvocationID_param;
//      main_1();
//    }
//
const cs_update_source_wgsl = [1235]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x63,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,
    0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x64,0x74,0x20,0x3a,0x20,0x66,0x33,0x32,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x34,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,
    0x6e,0x75,0x6d,0x5f,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x20,0x3a,0x20,
    0x69,0x33,0x32,0x2c,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x70,
    0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x70,
    0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,
    0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x36,0x29,0x20,0x2a,0x2f,0x0a,
    0x20,0x20,0x76,0x65,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,
    0x0a,0x0a,0x61,0x6c,0x69,0x61,0x73,0x20,0x52,0x54,0x41,0x72,0x72,0x20,0x3d,0x20,
    0x61,0x72,0x72,0x61,0x79,0x3c,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x3e,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x63,0x73,0x5f,0x73,0x73,0x62,0x6f,
    0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x70,0x72,0x74,0x20,0x3a,0x20,0x52,0x54,
    0x41,0x72,0x72,0x2c,0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,
    0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,
    0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x33,0x75,0x3b,0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,
    0x20,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x32,0x31,0x20,0x3a,0x20,0x63,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,
    0x69,0x6e,0x67,0x28,0x33,0x32,0x29,0x20,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x31,
    0x29,0x20,0x76,0x61,0x72,0x3c,0x73,0x74,0x6f,0x72,0x61,0x67,0x65,0x2c,0x20,0x72,
    0x65,0x61,0x64,0x5f,0x77,0x72,0x69,0x74,0x65,0x3e,0x20,0x78,0x5f,0x33,0x39,0x20,
    0x3a,0x20,0x63,0x73,0x5f,0x73,0x73,0x62,0x6f,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,
    0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,
    0x69,0x64,0x78,0x20,0x3a,0x20,0x75,0x33,0x32,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x20,0x20,
    0x76,0x61,0x72,0x20,0x76,0x65,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,
    0x0a,0x20,0x20,0x69,0x64,0x78,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,
    0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x69,0x64,0x78,0x20,0x3e,0x3d,0x20,
    0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,0x75,0x33,0x32,0x3e,0x28,0x78,0x5f,0x32,
    0x31,0x2e,0x6e,0x75,0x6d,0x5f,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x73,0x29,
    0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,
    0x0a,0x20,0x20,0x7d,0x0a,0x20,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x78,0x5f,0x33,
    0x39,0x2e,0x70,0x72,0x74,0x5b,0x69,0x64,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x76,0x65,0x6c,0x20,0x3d,0x20,0x78,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,
    0x5b,0x69,0x64,0x78,0x5d,0x2e,0x76,0x65,0x6c,0x3b,0x0a,0x20,0x20,0x76,0x65,0x6c,
    0x2e,0x79,0x20,0x3d,0x20,0x28,0x76,0x65,0x6c,0x2e,0x79,0x20,0x2d,0x20,0x28,0x31,
    0x2e,0x30,0x66,0x20,0x2a,0x20,0x78,0x5f,0x32,0x31,0x2e,0x64,0x74,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x28,0x70,0x6f,0x73,0x20,0x2b,0x20,
    0x28,0x76,0x65,0x6c,0x20,0x2a,0x20,0x78,0x5f,0x32,0x31,0x2e,0x64,0x74,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x70,0x6f,0x73,0x2e,0x79,0x20,0x3c,
    0x20,0x2d,0x32,0x2e,0x30,0x66,0x29,0x29,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,
    0x6f,0x73,0x2e,0x79,0x20,0x3d,0x20,0x2d,0x31,0x2e,0x37,0x39,0x39,0x39,0x39,0x39,
    0x39,0x35,0x32,0x33,0x31,0x36,0x32,0x38,0x34,0x31,0x37,0x39,0x36,0x39,0x66,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x6c,0x20,0x3d,0x20,0x28,0x76,0x65,0x6c,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,
    0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x38,0x66,0x2c,
    0x20,0x2d,0x30,0x2e,0x38,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,
    0x39,0x32,0x38,0x39,0x35,0x35,0x30,0x38,0x66,0x2c,0x20,0x30,0x2e,0x38,0x30,0x30,
    0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,0x30,
    0x38,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x29,0x3b,0x0a,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x30,0x20,0x3d,0x20,0x69,0x64,0x78,
    0x3b,0x0a,0x20,0x20,0x78,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x78,0x5f,0x38,
    0x30,0x5d,0x2e,0x70,0x6f,0x73,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,
    0x6c,0x65,0x74,0x20,0x78,0x5f,0x38,0x33,0x20,0x3d,0x20,0x69,0x64,0x78,0x3b,0x0a,
    0x20,0x20,0x78,0x5f,0x33,0x39,0x2e,0x70,0x72,0x74,0x5b,0x78,0x5f,0x38,0x33,0x5d,
    0x2e,0x76,0x65,0x6c,0x20,0x3d,0x20,0x76,0x65,0x6c,0x3b,0x0a,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x40,0x63,0x6f,0x6d,0x70,0x75,0x74,
    0x65,0x20,0x40,0x77,0x6f,0x72,0x6b,0x67,0x72,0x6f,0x75,0x70,0x5f,0x73,0x69,0x7a,
    0x65,0x28,0x36,0x34,0x69,0x2c,0x20,0x31,0x69,0x2c,0x20,0x31,0x69,0x29,0x0a,0x66,
    0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,
    0x67,0x6c,0x6f,0x62,0x61,0x6c,0x5f,0x69,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x5f,0x69,0x64,0x29,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,
    0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x75,0x29,0x20,0x7b,0x0a,0x20,0x20,0x67,
    0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x49,0x44,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x47,0x6c,0x6f,0x62,0x61,0x6c,
    0x49,0x6e,0x76,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x49,0x44,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,
    0x7d,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    struct particle {
//      /_ @offset(0) _/
//      pos : vec4f,
//      /_ @offset(16) _/
//      vel : vec4f,
//    }
//
//    alias RTArr = array<particle>;
//
//    struct vs_ssbo {
//      /_ @offset(0) _/
//      prt : RTArr,
//    }
//
//    struct vs_params {
//      /_ @offset(0) _/
//      mvp : mat4x4f,
//    }
//
//    @binding(32) @group(1) var<storage, read> x_15 : vs_ssbo;
//
//    var<private> gl_InstanceIndex : i32;
//
//    var<private> pos_1 : vec3f;
//
//    @binding(0) @group(0) var<uniform> x_46 : vs_params;
//
//    var<private> color : vec4f;
//
//    var<private> color0 : vec4f;
//
//    var<private> gl_Position : vec4f;
//
//    fn main_1() {
//      var inst_pos : vec3f;
//      var pos : vec4f;
//      inst_pos = x_15.prt[gl_InstanceIndex].pos.xyz;
//      let x_31 = (pos_1 + inst_pos);
//      pos = vec4f(x_31.x, x_31.y, x_31.z, 1.0f);
//      gl_Position = (x_46.mvp * pos);
//      color = color0;
//      return;
//    }
//
//    struct main_out {
//      @builtin(position)
//      gl_Position : vec4f,
//      @location(0)
//      color_1 : vec4f,
//    }
//
//    @vertex
//    fn main(@builtin(instance_index) gl_InstanceIndex_param : u32, @location(0) pos_1_param : vec3f, @location(1) color0_param : vec4f) -> main_out {
//      gl_InstanceIndex = bitcast<i32>(gl_InstanceIndex_param);
//      pos_1 = pos_1_param;
//      color0 = color0_param;
//      main_1();
//      return main_out(gl_Position, color);
//    }
//
const vs_source_wgsl = [1212]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,
    0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,
    0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,
    0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x31,0x36,0x29,0x20,0x2a,0x2f,
    0x0a,0x20,0x20,0x76,0x65,0x6c,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,
    0x7d,0x0a,0x0a,0x61,0x6c,0x69,0x61,0x73,0x20,0x52,0x54,0x41,0x72,0x72,0x20,0x3d,
    0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x70,0x61,0x72,0x74,0x69,0x63,0x6c,0x65,0x3e,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x73,0x73,0x62,
    0x6f,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x70,0x72,0x74,0x20,0x3a,0x20,0x52,
    0x54,0x41,0x72,0x72,0x2c,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,
    0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x6d,0x76,0x70,0x20,0x3a,0x20,0x6d,0x61,0x74,0x34,0x78,0x34,0x66,0x2c,0x0a,
    0x7d,0x0a,0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x33,0x32,0x29,0x20,
    0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x31,0x29,0x20,0x76,0x61,0x72,0x3c,0x73,0x74,
    0x6f,0x72,0x61,0x67,0x65,0x2c,0x20,0x72,0x65,0x61,0x64,0x3e,0x20,0x78,0x5f,0x31,
    0x35,0x20,0x3a,0x20,0x76,0x73,0x5f,0x73,0x73,0x62,0x6f,0x3b,0x0a,0x0a,0x76,0x61,
    0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,0x49,0x6e,
    0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x69,0x33,
    0x32,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,
    0x20,0x70,0x6f,0x73,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,
    0x0a,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x40,0x67,0x72,
    0x6f,0x75,0x70,0x28,0x30,0x29,0x20,0x76,0x61,0x72,0x3c,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x3e,0x20,0x78,0x5f,0x34,0x36,0x20,0x3a,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,
    0x74,0x65,0x3e,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,
    0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,
    0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,
    0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x69,0x6e,0x73,0x74,0x5f,0x70,0x6f,
    0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x20,0x20,
    0x69,0x6e,0x73,0x74,0x5f,0x70,0x6f,0x73,0x20,0x3d,0x20,0x78,0x5f,0x31,0x35,0x2e,
    0x70,0x72,0x74,0x5b,0x67,0x6c,0x5f,0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,
    0x6e,0x64,0x65,0x78,0x5d,0x2e,0x70,0x6f,0x73,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x31,0x20,0x3d,0x20,0x28,0x70,0x6f,0x73,
    0x5f,0x31,0x20,0x2b,0x20,0x69,0x6e,0x73,0x74,0x5f,0x70,0x6f,0x73,0x29,0x3b,0x0a,
    0x20,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x66,0x28,0x78,0x5f,
    0x33,0x31,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x33,0x31,0x2e,0x79,0x2c,0x20,0x78,0x5f,
    0x33,0x31,0x2e,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x78,0x5f,
    0x34,0x36,0x2e,0x6d,0x76,0x70,0x20,0x2a,0x20,0x70,0x6f,0x73,0x29,0x3b,0x0a,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,
    0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,
    0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x40,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,
    0x0a,0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x69,0x6e,0x73,0x74,0x61,0x6e,
    0x63,0x65,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x20,0x67,0x6c,0x5f,0x49,0x6e,0x73,
    0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3a,0x20,0x75,0x33,0x32,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x28,0x30,0x29,0x20,0x70,0x6f,0x73,0x5f,0x31,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x66,0x2c,0x20,0x40,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x28,0x31,0x29,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x29,0x20,0x2d,0x3e,0x20,
    0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x67,0x6c,0x5f,
    0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,
    0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,0x69,0x33,0x32,0x3e,0x28,0x67,0x6c,0x5f,
    0x49,0x6e,0x73,0x74,0x61,0x6e,0x63,0x65,0x49,0x6e,0x64,0x65,0x78,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x70,0x6f,0x73,0x5f,0x31,0x20,0x3d,0x20,
    0x70,0x6f,0x73,0x5f,0x31,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x30,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,
    0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x6f,0x75,0x74,0x28,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    var<private> frag_color : vec4f;
//
//    var<private> color : vec4f;
//
//    fn main_1() {
//      frag_color = color;
//      return;
//    }
//
//    struct main_out {
//      @location(0)
//      frag_color_1 : vec4f,
//    }
//
//    @fragment
//    fn main(@location(0) color_param : vec4f) -> main_out {
//      color = color_param;
//      main_1();
//      return main_out(frag_color);
//    }
//
const fs_source_wgsl = [348]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,
    0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,
    0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x40,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x0a,0x66,
    0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x28,0x30,0x29,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,
    0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x7d,0x0a,0x00,
};
pub fn displayShaderDesc(backend: sg.Backend) sg.ShaderDesc {
    var desc: sg.ShaderDesc = .{};
    desc.label = "display_shader";
    switch (backend) {
        .GLCORE => {
            desc.vertex_func.source = &vs_source_glsl430;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_glsl430;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = .FLOAT;
            desc.attrs[0].glsl_name = "pos";
            desc.attrs[1].base_type = .FLOAT;
            desc.attrs[1].glsl_name = "color0";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].glsl_binding_n = 0;
        },
        .GLES3 => {
            desc.vertex_func.source = &vs_source_glsl310es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_glsl310es;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = .FLOAT;
            desc.attrs[0].glsl_name = "pos";
            desc.attrs[1].base_type = .FLOAT;
            desc.attrs[1].glsl_name = "color0";
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 4;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].glsl_binding_n = 0;
        },
        .D3D11 => {
            desc.vertex_func.source = &vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = .FLOAT;
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].base_type = .FLOAT;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].hlsl_register_t_n = 16;
        },
        .METAL_MACOS => {
            desc.vertex_func.source = &vs_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = &fs_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = .FLOAT;
            desc.attrs[1].base_type = .FLOAT;
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].msl_buffer_n = 8;
        },
        .WGPU => {
            desc.vertex_func.source = &vs_source_wgsl;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_wgsl;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = .FLOAT;
            desc.attrs[1].base_type = .FLOAT;
            desc.uniform_blocks[0].stage = .VERTEX;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 64;
            desc.uniform_blocks[0].wgsl_group0_binding_n = 0;
            desc.storage_buffers[0].stage = .VERTEX;
            desc.storage_buffers[0].readonly = true;
            desc.storage_buffers[0].wgsl_group1_binding_n = 32;
        },
        else => {},
    }
    return desc;
}
pub fn initShaderDesc(backend: sg.Backend) sg.ShaderDesc {
    var desc: sg.ShaderDesc = .{};
    desc.label = "init_shader";
    switch (backend) {
        .GLCORE => {
            desc.compute_func.source = &cs_init_source_glsl430;
            desc.compute_func.entry = "main";
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].glsl_binding_n = 0;
        },
        .GLES3 => {
            desc.compute_func.source = &cs_init_source_glsl310es;
            desc.compute_func.entry = "main";
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].glsl_binding_n = 0;
        },
        .D3D11 => {
            desc.compute_func.source = &cs_init_source_hlsl5;
            desc.compute_func.d3d11_target = "cs_5_0";
            desc.compute_func.entry = "main";
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].hlsl_register_u_n = 0;
        },
        .METAL_MACOS => {
            desc.compute_func.source = &cs_init_source_metal_macos;
            desc.compute_func.entry = "main0";
            desc.mtl_threads_per_threadgroup.x = 64;
            desc.mtl_threads_per_threadgroup.y = 1;
            desc.mtl_threads_per_threadgroup.z = 1;
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].msl_buffer_n = 8;
        },
        .WGPU => {
            desc.compute_func.source = &cs_init_source_wgsl;
            desc.compute_func.entry = "main";
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].wgsl_group1_binding_n = 32;
        },
        else => {},
    }
    return desc;
}
pub fn updateShaderDesc(backend: sg.Backend) sg.ShaderDesc {
    var desc: sg.ShaderDesc = .{};
    desc.label = "update_shader";
    switch (backend) {
        .GLCORE => {
            desc.compute_func.source = &cs_update_source_glsl430;
            desc.compute_func.entry = "main";
            desc.uniform_blocks[0].stage = .COMPUTE;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_21.dt";
            desc.uniform_blocks[0].glsl_uniforms[1].type = .INT;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_21.num_particles";
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].glsl_binding_n = 0;
        },
        .GLES3 => {
            desc.compute_func.source = &cs_update_source_glsl310es;
            desc.compute_func.entry = "main";
            desc.uniform_blocks[0].stage = .COMPUTE;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_21.dt";
            desc.uniform_blocks[0].glsl_uniforms[1].type = .INT;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_21.num_particles";
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].glsl_binding_n = 0;
        },
        .D3D11 => {
            desc.compute_func.source = &cs_update_source_hlsl5;
            desc.compute_func.d3d11_target = "cs_5_0";
            desc.compute_func.entry = "main";
            desc.uniform_blocks[0].stage = .COMPUTE;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].hlsl_register_u_n = 0;
        },
        .METAL_MACOS => {
            desc.compute_func.source = &cs_update_source_metal_macos;
            desc.compute_func.entry = "main0";
            desc.mtl_threads_per_threadgroup.x = 64;
            desc.mtl_threads_per_threadgroup.y = 1;
            desc.mtl_threads_per_threadgroup.z = 1;
            desc.uniform_blocks[0].stage = .COMPUTE;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].msl_buffer_n = 8;
        },
        .WGPU => {
            desc.compute_func.source = &cs_update_source_wgsl;
            desc.compute_func.entry = "main";
            desc.uniform_blocks[0].stage = .COMPUTE;
            desc.uniform_blocks[0].layout = .STD140;
            desc.uniform_blocks[0].size = 16;
            desc.uniform_blocks[0].wgsl_group0_binding_n = 0;
            desc.storage_buffers[0].stage = .COMPUTE;
            desc.storage_buffers[0].readonly = false;
            desc.storage_buffers[0].wgsl_group1_binding_n = 32;
        },
        else => {},
    }
    return desc;
}
pub fn displayAttrSlot(attr_name: []const u8) ?usize {
    if (std.mem.eql(u8, attr_name, "pos")) {
        return 0;
    }
    if (std.mem.eql(u8, attr_name, "color0")) {
        return 1;
    }
    return null;
}
pub fn displayImageSlot(img_name: []const u8) ?usize {
    _ = img_name;
    return null;
}
pub fn displaySamplerSlot(smp_name: []const u8) ?usize {
    _ = smp_name;
    return null;
}
pub fn displayUniformBlockSlot(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        return 0;
    }
    return null;
}
pub fn displayUniformBlockSize(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        return @sizeOf(VsParams);
    }
    return null;
}
pub fn displayUniformOffset(ub_name: []const u8, u_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        if (std.mem.eql(u8, u_name, "mvp")) {
            return 0;
        }
    }
    return null;
}
pub fn displayUniformDesc(ub_name: []const u8, u_name: []const u8) ?sg.GlslShaderUniform {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        if (std.mem.eql(u8, u_name, "mvp")) {
            var desc: sg.GlslShaderUniform = .{};
            desc.type = .MAT4;
            desc.array_count = 0;
            desc.glsl_name = "mvp";
            return desc;
        }
    }
    return null;
}
pub fn displayStorageBufferSlot(sbuf_name: []const u8) ?usize {
    if (std.mem.eql(u8, sbuf_name, "vs_ssbo")) {
        return 0;
    }
    return null;
}
pub fn displayStorageImageSlot(simg_name: []const u8) ?usize {
    _ = simg_name;
    return null;
}
pub fn initAttrSlot(attr_name: []const u8) ?usize {
    _ = attr_name;
    return null;
}
pub fn initImageSlot(img_name: []const u8) ?usize {
    _ = img_name;
    return null;
}
pub fn initSamplerSlot(smp_name: []const u8) ?usize {
    _ = smp_name;
    return null;
}
pub fn initUniformBlockSlot(ub_name: []const u8) ?usize {
    _ = ub_name;
    return null;
}
pub fn initUniformBlockSize(ub_name: []const u8) ?usize {
    _ = ub_name;
    return null;
}
pub fn initUniformOffset(ub_name: []const u8, u_name: []const u8) ?usize {
    _ = ub_name;
    _ = u_name;
    return null;
}
pub fn initUniformDesc(ub_name: []const u8, u_name: []const u8) ?sg.GlslShaderUniform {
    _ = ub_name;
    _ = u_name;
    return null;
}
pub fn initStorageBufferSlot(sbuf_name: []const u8) ?usize {
    if (std.mem.eql(u8, sbuf_name, "cs_ssbo")) {
        return 0;
    }
    return null;
}
pub fn initStorageImageSlot(simg_name: []const u8) ?usize {
    _ = simg_name;
    return null;
}
pub fn updateAttrSlot(attr_name: []const u8) ?usize {
    _ = attr_name;
    return null;
}
pub fn updateImageSlot(img_name: []const u8) ?usize {
    _ = img_name;
    return null;
}
pub fn updateSamplerSlot(smp_name: []const u8) ?usize {
    _ = smp_name;
    return null;
}
pub fn updateUniformBlockSlot(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "cs_params")) {
        return 0;
    }
    return null;
}
pub fn updateUniformBlockSize(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "cs_params")) {
        return @sizeOf(CsParams);
    }
    return null;
}
pub fn updateUniformOffset(ub_name: []const u8, u_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "cs_params")) {
        if (std.mem.eql(u8, u_name, "dt")) {
            return 0;
        }
        if (std.mem.eql(u8, u_name, "num_particles")) {
            return 4;
        }
    }
    return null;
}
pub fn updateUniformDesc(ub_name: []const u8, u_name: []const u8) ?sg.GlslShaderUniform {
    if (std.mem.eql(u8, ub_name, "cs_params")) {
        if (std.mem.eql(u8, u_name, "dt")) {
            var desc: sg.GlslShaderUniform = .{};
            desc.type = .FLOAT;
            desc.array_count = 0;
            desc.glsl_name = "dt";
            return desc;
        }
        if (std.mem.eql(u8, u_name, "num_particles")) {
            var desc: sg.GlslShaderUniform = .{};
            desc.type = .INT;
            desc.array_count = 0;
            desc.glsl_name = "num_particles";
            return desc;
        }
    }
    return null;
}
pub fn updateStorageBufferSlot(sbuf_name: []const u8) ?usize {
    if (std.mem.eql(u8, sbuf_name, "cs_ssbo")) {
        return 0;
    }
    return null;
}
pub fn updateStorageImageSlot(simg_name: []const u8) ?usize {
    _ = simg_name;
    return null;
}
